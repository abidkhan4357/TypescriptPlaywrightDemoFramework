name: Playwright Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium]
    container:
      image: mcr.microsoft.com/playwright:v1.32.1-focal    
      options: --shm-size=2gb
    steps:
      - uses: actions/checkout@v2

      - name: Cache Playwright dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Playwright dependencies
        run: npm ci

      - name: Run UI tests
        run: npm run test:ui

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run API tests
        run: npm run test:api

  build-and-push:
    runs-on: ubuntu-latest
    needs: [ui-tests, api-tests]
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          docker build -t typescript-playwright-framework:latest .
          docker tag typescript-playwright-framework:latest ${{ secrets.DOCKER_USERNAME }}/typescript-playwright-framework:latest

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/typescript-playwright-framework:latest
